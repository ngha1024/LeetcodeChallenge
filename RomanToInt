public class Solution {
    public int RomanToInt(string s) {
        int result = 0;
		
		if (s == null || s.Length ==0){
			return result;
		}
		
		Dictionary<char, int> romanValues = new Dictionary<char, int>();
		romanValues.Add('I', 1);
		romanValues.Add('V', 5);
		romanValues.Add('X', 10);
		romanValues.Add('L', 50);
		romanValues.Add('C', 100);
		romanValues.Add('D', 500);
		romanValues.Add('M', 1000);
		
		for (int i = 0; i < s.Length; i++){
			
			//If current value is smaller next symbol then minus current value from result
			if (i + 1 < s.Length && romanValues[s[i]] < romanValues[s[i+1]]){
				result = result - romanValues[s[i]];
			}
			// else if current value is greater than or equal to the next symbol
			else {
				result= result + romanValues[s[i]];
			}					
		}		
		
		return result;
    }
}
